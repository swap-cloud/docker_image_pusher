name: Docker

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:
  build:
    name: Pull and Tag Images
    runs-on: ubuntu-latest
    steps:
      - name: Before freeing up disk space
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
      
      # 增加可用磁盘空间
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 128
          remove-dotnet: 'true'
          remove-haskell: 'true'
          build-mount-path: '/var/lib/docker/'

      - name: Restart docker
        run: sudo service docker restart

      - name: Free up disk space complete
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image to Aliyun
        run: |
          docker login -u $ALIYUN_REGISTRY_USER -p $ALIYUN_REGISTRY_PASSWORD $ALIYUN_REGISTRY

          # 读取 images.txt 文件并处理每个镜像
          while IFS= read -r line || [ -n "$line" ]; do
              # 忽略空行与注释
              [[ -z "$line" ]] && continue
              if echo "$line" | grep -q '^\s*#'; then
                  continue
              fi

              # 获取镜像的完整名称，例如hangzhou.cri.aliyun.com/xxxx/ssss:v2
              image=$(echo "$line" | awk '{print $NF}')
              # 将@sha256:等字符删除
              image="${image%%@*}"
              echo "image: $image"
          
              # 将冒号和斜杠替换为中划线
              new_image_tag=$(echo "$image" | sed 's/\//-/g' | sed 's/:/-/g')
          
              # 生成新的镜像地址
              new_image="$ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/image-proxy:$new_image_tag"
          
              docker manifest inspect "$new_image" &>/dev/null
              if [ $? -eq 0 ]; then
                echo "镜像 $new_image 已经存在，跳过拉取和推送操作"
              else
                # 镜像不存在时，执行拉取、打标签和推送操作
                echo "docker pull $image"
                docker pull $image
                
                echo "docker tag $image $new_image"
                docker tag $image $new_image
                
                echo "docker push $new_image"
                docker push $new_image
              fi
          
              echo "开始清理磁盘空间"
              echo "=============================================================================="
              df -hT
              echo "=============================================================================="
              docker rmi $image
              docker rmi $new_image
              echo "磁盘空间清理完毕"
              echo "=============================================================================="
              df -hT
              echo "=============================================================================="     
          done < images.txt
